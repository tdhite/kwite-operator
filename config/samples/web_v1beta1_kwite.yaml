apiVersion: web.kwite.site/v1beta1
kind: Kwite
metadata:
  name: kwite-1
spec:
  url: /kwite
  port: 8080
  image: tdhite/kwite:0.0.67-dev
  targetcpu: 50
  minreplicas: 1
  maxreplicas: 10
  publish: LoadBalancer
  ready: OK!
  alive: OK!
  rewrite: |
    {
      "kwite-1.kwite": "some.other.site",
      "kwite-2.kwite": "www.guimp.com"
    }
  template: |
    <html>
    <head>
    <style>
    body {
      background-color: #EEEEEE;
    }
    hr {
      color: white
    }
    h1 {
      color: #BB33BB;
      margin-left: 40px;
    }
    h2 {
      color: #884488;
      margin-left: 40px;
    }
    p {
      color: #222222;
      margin-left: 40px;
      font-size: 1.2em;
    }
    a {
      color: #4444FF;
      font-size: 1.2em;
    }
    </style>
    </head>
    <body>
    <h1>This Example Kwite Template Shows a Few Functions</h1>

    <h2>Passed Template Variable Resolutions</h2>
    <p>Note: this only works if JSON is passed in the message body.</p>
    <p>When executed x was "{{ .x }}".</p>
    <p>If you see empty quotes, no JSON existed in the HTTP request body to the Kwite, therefore was "null":</p>
    <p>The JSON data passed in was: {{ $dotAsString := jsonToString . }}{{ $dotAsString }}</p>

    <p>However, the template can create it's own data. Let's make a variable, reset it and print it's value, like:</p>
    <p><code>{{ "{{ $v := valuesNew 2 }}" }}<br/>{{ "{{ $v.Set 3 }}" }}<br/>{{ "After variable manipulations, $v is {{ $v }}" }}</code></p>
    <p>This is what happens when that code runs in the template:</p>

    {{ $v := valuesNew 2 }}
    {{ $v.Set 3 }}

    <p>After variable manipulations, $v is {{ $v }}.</p>

    <p>Note: internally $v is part of a Go struct, so it needs those braces around it to evaluate it.</p>

    <p>To get a more palatable print format, use the <a href="https://golang.org/pkg/fmt/">string formats</a>.<br/>
    We'll use this: After variable manipulations, $v is {{ "{{ $v.Printf" }} "%v" {{ "}}" }}.</p>

    <p>After variable manipulations, $v is {{ $v.Printf "%v" }}.</p>

    <hr/><h2>What About String Functions?</h2>
    <p>
    What's next is the result of string computations via the strCompare function:

    <br/>{{ $s1 := "aaa" -}} {{- $s2 := "bbb" -}} {{- $comp := strCompare $s1 $s2 -}}
    <br/>{{ $s1 }} is {{ if lt $comp 0 -}} less {{ else -}} greater {{ end -}} than {{ $s2 }}.
    <br/>{{ $s2 }} is {{ if gt $comp 0 -}} greater {{ else -}} less {{ end -}} than {{ $s1 }}.
    <br/>
    </p>

    <p>Here is the output from the use of strNewReplacer and subsequent Replace functions:</p>

    <p>{{ $r := strNewReplacer "<" "&lt;" ">" "&gt;" }}</p>
    <p>{{- $r.Replace "This is some italicized <i>HTML</i>!" }}</p>

    <hr/><h2>How Abouth Math?</h2>
    <p>The arccos of sin(Pi) is {{ Acos (Sin Pi) }} radians.</p>

    <hr/><h2>How Abouth Some JSON?</h2>
    <p>{{ $myJSON := "{\"c\": \"This is &lt;b&gt;bold&lt;b&gt; and this is not\"}" }}</p>
    <p>{{ $isValid := jsonValid $myJSON }}</p>
    <p>jsonValid says { "c": "This is &lt;b&gt;bold&lt;/b&gt; and this is not" } is {{ if not $isValid }} not {{ end -}} valid JSON.</p>

    <hr/><h2>HTTP Functions also exist:</h2>
    <p>The rest is supposedly the smallest web site in the world (guimp.com) from the following template scriptlet:</p>
    <p><code>{{ "{{ $g := httpGet \"http://www.guimp.com\" \"{\\\"x\\\": 2}\" \"Accept\" \"text/plain\" \"Content-type\" \"application/json\" }}" }}<br/>
    {{ "{{- $r.Replace $g }}" }}</code></p>

    <p>{{ $g := httpGet "http://www.guimp.com" "{\"x\": 2}" "Accept" "text/plain" "Content-type" "application/json" }}<br/>
    {{- $r.Replace $g }}</p>

    <p>The next content was retrieved via httpGet and kwite url reformation of kwite://kwite-2.kwite/, which is rewritten to http://www.guimp.com/:</p>
    <p>{{ httpGet "kwite://kwite-2.kwite:8080/" "" }}</p>
    </body>
    </html>
